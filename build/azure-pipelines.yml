trigger:
  branches:
    include:
    - master
  paths:
    exclude:
    - build/*

pool:
  vmImage: 'ubuntu-latest'

steps:
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '5.x'
  - task: DotNetCoreCLI@2
    displayName: dotnet restore
    inputs:
      command: 'restore'
      projects: '**/*.sln'
      arguments: '--configuration Release'
  - task: DotNetCoreCLI@2
    displayName: dotnet build
    inputs:
      command: 'build'
      projects: '**/*.sln'
      arguments: '--configuration Release --no-restore'
  - task: DotNetCoreCLI@2
    displayName: dotnet test
    inputs:
      command: 'test'
      projects: '**/*.Tests.csproj'
      arguments: '--configuration Release'
  - task: CopyFiles@2
    inputs:
      Contents: '**/Release/net5.0/SusSuite.Core.dll'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
      flattenFolders: true
  - task: CopyFiles@2
    inputs:
      Contents: '**/Release/*.nupkg;**/Release/*.symbols.nupkg'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/nuget'
      flattenFolders: true
  - task: NuGetCommand@2
    displayName: nuget push
    inputs:
      command: 'push'
      packagesToPush: '$(Build.ArtifactStagingDirectory)/nuget/*.nupkg;!$(Build.ArtifactStagingDirectory)/nuget/*.symbols.nupkg'
      nuGetFeedType: 'external'
      publishFeedCredentials: 'Nuget Connection'

  - publish: '$(Build.ArtifactStagingDirectory)'
    artifact: SusSuite